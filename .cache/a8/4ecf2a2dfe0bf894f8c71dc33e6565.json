{"id":"targets/isAllTargetsCovered.ts","dependencies":[{"name":"/Users/kubaadamczyk 1/Desktop/GraSokoban/tsconfig.json","includedInParent":true,"mtime":1616279436404},{"name":"/Users/kubaadamczyk 1/Desktop/GraSokoban/package.json","includedInParent":true,"mtime":1617185069496},{"name":"../utils/ColorUtils","loc":{"line":1,"column":38},"parent":"/Users/kubaadamczyk 1/Desktop/GraSokoban/src/targets/isAllTargetsCovered.ts","resolved":"/Users/kubaadamczyk 1/Desktop/GraSokoban/src/utils/ColorUtils.ts"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ColorUtils = require(\"../utils/ColorUtils\");\n\nvar isAllTargetsCovered = function isAllTargetsCovered(targetsCoveredByColor, boxesByColor) {\n  var targetColors = Object.keys(targetsCoveredByColor);\n\n  for (var i = 0; i < targetColors.length; ++i) {\n    var targetColor = parseInt(targetColors[i]);\n    var boxColor = (0, _ColorUtils.targetColorToBoxColor)(targetColor);\n\n    if (!(boxColor in boxesByColor)) {\n      continue;\n    }\n\n    var numBoxes = boxesByColor[boxColor].length;\n    var numCovered = targetsCoveredByColor[targetColor];\n\n    if (numCovered < numBoxes) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar _default = isAllTargetsCovered;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":10,"column":4}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":3,"column":25},"generated":{"line":10,"column":23}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":3,"column":28},"generated":{"line":10,"column":26}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":10,"column":35}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":3,"column":28},"generated":{"line":10,"column":54}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":3,"column":29},"generated":{"line":10,"column":55}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":3,"column":28},"generated":{"line":10,"column":76}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":3,"column":79},"generated":{"line":10,"column":78}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":3,"column":28},"generated":{"line":10,"column":90}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":3,"column":143},"generated":{"line":10,"column":92}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":4,"column":8},"generated":{"line":11,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":4,"column":14},"generated":{"line":11,"column":6}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":4,"column":26},"generated":{"line":11,"column":18}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":4,"column":29},"generated":{"line":11,"column":21}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":4,"column":35},"generated":{"line":11,"column":27}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":4,"column":36},"generated":{"line":11,"column":28}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":4,"column":29},"generated":{"line":11,"column":32}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":4,"column":41},"generated":{"line":11,"column":33}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":4,"column":29},"generated":{"line":11,"column":54}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":4,"column":8},"generated":{"line":11,"column":55}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":5,"column":8},"generated":{"line":13,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":13,"column":7}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":5,"column":16},"generated":{"line":13,"column":11}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":5,"column":17},"generated":{"line":13,"column":12}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":5,"column":18},"generated":{"line":13,"column":15}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":5,"column":8},"generated":{"line":13,"column":16}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":5,"column":20},"generated":{"line":13,"column":18}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":13,"column":19}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":5,"column":24},"generated":{"line":13,"column":22}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":5,"column":36},"generated":{"line":13,"column":34}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":5,"column":37},"generated":{"line":13,"column":35}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":5,"column":8},"generated":{"line":13,"column":41}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":5,"column":45},"generated":{"line":13,"column":43}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":5,"column":47},"generated":{"line":13,"column":45}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":5,"column":8},"generated":{"line":13,"column":46}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":6,"column":8},"generated":{"line":13,"column":48}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":7,"column":12},"generated":{"line":14,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":7,"column":18},"generated":{"line":14,"column":8}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":7,"column":29},"generated":{"line":14,"column":19}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":7,"column":32},"generated":{"line":14,"column":22}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":7,"column":40},"generated":{"line":14,"column":30}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":7,"column":41},"generated":{"line":14,"column":31}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":7,"column":53},"generated":{"line":14,"column":43}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":7,"column":54},"generated":{"line":14,"column":44}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":7,"column":53},"generated":{"line":14,"column":45}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":7,"column":40},"generated":{"line":14,"column":46}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":7,"column":12},"generated":{"line":14,"column":47}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":15,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":8,"column":18},"generated":{"line":15,"column":8}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":8,"column":26},"generated":{"line":15,"column":16}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":8,"column":29},"generated":{"line":15,"column":19}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":8,"column":51},"generated":{"line":15,"column":58}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":8,"column":29},"generated":{"line":15,"column":69}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":15,"column":70}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":9,"column":12},"generated":{"line":17,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":17,"column":8}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":9,"column":17},"generated":{"line":17,"column":10}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":9,"column":25},"generated":{"line":17,"column":18}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":9,"column":29},"generated":{"line":17,"column":22}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":17,"column":34}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":9,"column":12},"generated":{"line":17,"column":35}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":17,"column":37}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":11,"column":16},"generated":{"line":18,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":12,"column":13},"generated":{"line":19,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":14,"column":12},"generated":{"line":21,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":14,"column":18},"generated":{"line":21,"column":8}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":14,"column":26},"generated":{"line":21,"column":16}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":14,"column":29},"generated":{"line":21,"column":19}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":14,"column":41},"generated":{"line":21,"column":31}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":14,"column":42},"generated":{"line":21,"column":32}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":14,"column":41},"generated":{"line":21,"column":40}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":14,"column":29},"generated":{"line":21,"column":41}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":14,"column":52},"generated":{"line":21,"column":42}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":14,"column":12},"generated":{"line":21,"column":48}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":15,"column":12},"generated":{"line":22,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":15,"column":18},"generated":{"line":22,"column":8}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":15,"column":28},"generated":{"line":22,"column":18}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":15,"column":31},"generated":{"line":22,"column":21}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":15,"column":52},"generated":{"line":22,"column":42}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":15,"column":53},"generated":{"line":22,"column":43}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":15,"column":52},"generated":{"line":22,"column":54}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":15,"column":12},"generated":{"line":22,"column":55}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":17,"column":12},"generated":{"line":24,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":17,"column":15},"generated":{"line":24,"column":8}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":17,"column":25},"generated":{"line":24,"column":18}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":17,"column":28},"generated":{"line":24,"column":21}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":17,"column":12},"generated":{"line":24,"column":29}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":18,"column":12},"generated":{"line":24,"column":31}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":19,"column":16},"generated":{"line":25,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":19,"column":23},"generated":{"line":25,"column":13}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":19,"column":16},"generated":{"line":25,"column":18}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":26,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":22,"column":9},"generated":{"line":27,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":29,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":24,"column":15},"generated":{"line":29,"column":9}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":29,"column":13}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":25,"column":1},"generated":{"line":30,"column":0}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":30,"column":1}},{"source":"targets/isAllTargetsCovered.ts","name":null,"original":{"line":26,"column":15},"generated":{"line":32,"column":15}}],"sources":{"targets/isAllTargetsCovered.ts":"import {targetColorToBoxColor} from '../utils/ColorUtils'\n\nconst isAllTargetsCovered = (targetsCoveredByColor: { [key: number]: number }, boxesByColor: { [key: number]: Phaser.GameObjects.Sprite[] }) => {\n        const targetColors = Object.keys(targetsCoveredByColor)\n        for(let i=0;i < targetColors.length; ++i)\n        {\n            const targetColor = parseInt(targetColors[i])\n            const boxColor = targetColorToBoxColor(targetColor)\n            if(!(boxColor in boxesByColor))\n            {\n                continue\n            }\n    \n            const numBoxes = boxesByColor[boxColor].length\n            const numCovered = targetsCoveredByColor[targetColor]\n    \n            if(numCovered < numBoxes)\n            {\n                return false\n            }\n            \n        }\n\n        return true\n}\nexport default isAllTargetsCovered"},"lineCount":null}},"error":null,"hash":"d241e55a9586343d644bf458fb116a2a","cacheData":{"env":{}}}